# Workflow name
name: Android CI

on: 
  push: 
    branches: [master]
    paths:
    - 'AndroidApp/**'
  pull_request:
#     branches: [master]
#     types: [ labeled ]
    paths:
    - 'AndroidApp/**'
  workflow_dispatch:
    
    
    
# Where it will run
jobs:
  build:
    name: Build, and test Android app
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8
      - name: Build with Gradle
        working-directory: ./AndroidApp
        run: ./gradlew build
      - name: Run Unit Tests
        working-directory: ./AndroidApp
        run: ./gradlew test
      - name: Run connected test
        uses: ReactiveCircus/android-emulator-runner@v2.21.0
        with:
          api-level: 29
          target: default
          arch: x86
          profile: Nexus 6
          working-directory: ./AndroidApp
          script: ./gradlew connectedCheck --stacktrace
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: app
          path: AndroidApp/app/build/outputs/apk/debug/app-debug.apk
  release:
      name: Create a release
      runs-on: ubuntu-latest
      # if: startsWith(github.ref, 'refs/tags/v')
      if: github.ref == 'ref/heads/master' || github.event.pull_request.merged == 'true'
      steps:          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         if: startsWith(github.ref, 'refs/tags/dev-')
        with:
          tag_name: ${{ github.ref }}
#           release_name: Release ${{ github.ref }}
          release_name:  Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            Changes in this Release
            - 
      - name: Save name of our Artifact
        id: set-result-artifact
#         working-directory: ./AndroidApp
        run: |
          ARTIFACT_PATHNAME_APK=$(ls AndroidApp/app/build/outputs/apk/release/*.apk | head -n 1)
          ARTIFACT_NAME_APK=$(basename $ARTIFACT_PATHNAME_APK)
          echo "ARTIFACT_NAME_APK is " ${ARTIFACT_NAME_APK}
          echo "ARTIFACT_PATHNAME_APK=${ARTIFACT_PATHNAME_APK}" >> $GITHUB_ENV
          echo "ARTIFACT_NAME_APK=${ARTIFACT_NAME_APK}" >> $GITHUB_ENV
          
      - name: Upload our Artifact Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
#           working-directory: ./AndroidApp
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path:  ${{ env.ARTIFACT_PATHNAME_APK }}
          asset_name: ${{ env.ARTIFACT_NAME_APK }}
          asset_content_type: application/zip

