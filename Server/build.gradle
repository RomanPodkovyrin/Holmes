plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.8.10'
    id 'org.jetbrains.dokka' version '1.6.10'
}

group "com.example"
version "0.0.1"
mainClassName = "com.server.ApplicationKt"

repositories {
    mavenCentral()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "11"
    }
}

dependencies {
    // Other


    // KTOR
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    // for https requests
    implementation "io.ktor:ktor-network-tls-certificates:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-gson:$ktor_version"
    implementation "io.ktor:ktor-client-cio:$ktor_version"
    // Database
    implementation("org.litote.kmongo:kmongo-coroutine:4.5.0")

    // Test
    def mockitoVersion = '4.0.0'
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

// Creates a jar file
task fetchJar(type: Jar) {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}